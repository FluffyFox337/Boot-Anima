name: Create Release

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    # Шаг 1: Checkout репозитория
    - name: Checkout repository
      uses: actions/checkout@v2

    # Шаг 2: Устанавливаем необходимые инструменты (zip)
    - name: Set up tools
      run: |
        sudo apt-get install zip

    # Шаг 3: Читаем версию из файла module.prop
    - name: Read version from module.prop
      id: version
      run: |
        version=$(grep -oP '^version=\K.+' module.prop)
        echo "version=$version" >> $GITHUB_ENV

    # Шаг 4: Создание архива, исключая папку .github/workflows
    - name: Create ZIP archive
      run: |
        zip -r Boot-Anima.zip . -x ".github/*"

    # Шаг 5: Получаем GitHub токен для публикации
    - name: Get the GitHub token
      id: get_token
      run: echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

    # Шаг 6: Проверяем, существует ли релиз с тегом 'latest'
    - name: Check if release with tag 'latest' exists
      id: release_check
      run: |
        release_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/FluffyFox337/Boot-Anima/releases/tags/latest | jq -r '.id')
        echo "release_id=$release_id" >> $GITHUB_ENV

    # Шаг 7: Если релиз существует, удаляем его
    - name: Delete old release if exists
      if: ${{ env.release_id != 'null' }}
      run: |
        curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/FluffyFox337/Boot-Anima/releases/${{ env.release_id }}

    # Шаг 8: Создание нового релиза с тегом 'latest'
    - name: Create new release with tag 'latest'
      run: |
        response=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d @- https://api.github.com/repos/FluffyFox337/Boot-Anima/releases <<EOF
        {
          "tag_name": "latest",
          "name": "Boot-Anima ${{ env.version }}",
          "body": "Version: ${{ env.version }}\nDescription: Just put [bootanimation.zip] into this script.",
          "draft": false,
          "prerelease": false
        }
        EOF
        )
        release_url=$(echo "$response" | jq -r '.upload_url' | sed -e "s/{?name,label}//")

    # Шаг 9: Загрузка архива в новый релиз
    - name: Upload ZIP to the new release
      run: |
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/zip" \
          --data-binary @Boot-Anima.zip \
          "$release_url?name=Boot-Anima.zip"
