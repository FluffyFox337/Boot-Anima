name: Update and Release Workflow

on:
  push:
    branches:
      - update
    paths:
      - 'update.json'
  workflow_dispatch:

concurrency:
  group: update-release
  cancel-in-progress: true

jobs:
  update_module_prop:
    runs-on: ubuntu-latest
    name: Update module.prop
    if: needs.check_recent_commit.outputs.should_run == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - uses: actions/checkout@v4
        with:
          ref: update
          path: update_branch

      - name: Read version from update.json
        id: read_update_json
        run: |
          VERSION=$(jq -r '.version' update_branch/update.json)
          VERSION_CODE=$(jq -r '.versionCode' update_branch/update.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

      - name: Update module.prop file
        run: |
          sed -i "s/^version=.*$/version=${{ env.VERSION }}/" module.prop
          sed -i "s/^versionCode=.*$/versionCode=${{ env.VERSION_CODE }}/" module.prop

      - name: Commit changes to module.prop
        run: |
          git add module.prop
          git commit -m "Update version and versionCode from update.json"
          git push

  build_and_create_release:
    runs-on: ubuntu-latest
    needs: update_module_prop
    if: needs.check_recent_commit.outputs.should_run == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - uses: actions/checkout@v4
        with:
          ref: update
          path: update_branch

      - name: Read version and changelog from update.json and build.md
        id: read_release_info
        run: |
          VERSION=$(jq -r '.version' update_branch/update.json)
          CHANGELOG=$(cat update_branch/build.md)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "CHANGELOG=$CHANGELOG" >> $GITHUB_ENV

      - name: Create zip file with repository contents
        run: |
          git archive --format zip --output=Boot-Anima.zip HEAD
          zip -r Boot-Anima.zip . -x "*.github/workflows/*"

      - name: Delete Existing Release
        id: delete_release
        uses: actions/github-script@v6
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const tag = "latest";
      
            // List all releases and find the release by tag
            const releases = await github.rest.repos.listReleases({
              owner: owner,
              repo: repo,
            });
      
            const release = releases.data.find(release => release.tag_name === tag);
      
            // Delete release and tag if found
            if (release) {
              await github.rest.repos.deleteRelease({
                owner: owner,
                repo: repo,
                release_id: release.id,
              });
              console.log(`Deleted release with ID ${release.id}`);
            } else {
              console.log("No existing release to delete");
            }
      
            // Try to delete the tag
            try {
              await github.rest.git.deleteRef({
                owner: owner,
                repo: repo,
                ref: `tags/${tag}`,
              });
              console.log(`Deleted tag ${tag}`);
            } catch (error) {
              console.error(`Error deleting tag: ${error.message}`);
            }

      - name: Nightly Release
        uses: softprops/action-gh-release@v1
        with:
          name: Boot-Anima Release [${{ env.VERSION }}]
          tag_name: latest
          body: |
            **This release has been built by Github Actions**
            [Link to build](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            Build Version: ${{ env.VERSION }}

            Change Log:
            ${{ env.CHANGELOG }}
          files: Boot-Anima.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
