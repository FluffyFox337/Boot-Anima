name: Update Release

on:
  workflow_dispatch:

jobs:
  update-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Checkout 'update' branch
        uses: actions/checkout@v4
        with:
          ref: update
          path: update

      - name: Read version from update.json
        id: version
        run: |
          VERSION=$(jq -r .version update/update.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Read changelog from build.md
        id: changelog
        run: |
          CHANGELOG=$(cat update/build.md)
          echo "CHANGELOG=$CHANGELOG" >> $GITHUB_ENV

      - name: Create a zip archive
        run: |
          mkdir temp_dir
          rsync -av --exclude '.github' --exclude '.git' ./ temp_dir/
          zip -r Boot-Anima.zip temp_dir/*
          rm -rf temp_dir

      - name: Check if 'latest' tag exists
        run: |
          git fetch --tags
          if git rev-parse "refs/tags/latest" >/dev/null 2>&1; then
            echo "Tag 'latest' exists."
          else
            echo "Tag 'latest' does not exist. Creating it."
            git tag latest
            git push origin latest
          fi

      - name: Upload the release zip
        uses: actions/upload-artifact@v4
        with:
          name: Boot-Anima.zip
          path: Boot-Anima.zip

      - name: Create or update the release with 'latest' tag
        uses: softprops/action-gh-release@v1
        with:
          files: Boot-Anima.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set release name and description
        run: |
          RELEASE_ID=$(gh release view latest --json id -q '.id')
          gh release edit $RELEASE_ID --title "$VERSION" --body "$CHANGELOG"
