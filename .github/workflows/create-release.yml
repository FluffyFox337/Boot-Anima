name: Update Release with Latest Tag

on:
   push:
        branches: [update]

jobs:
  update-release:
    runs-on: ubuntu-latest

    steps:
      # Клонируем репозиторий
      - name: Checkout code
        uses: actions/checkout@v4

      # Устанавливаем zip
      - name: Install zip
        run: sudo apt-get install -y zip

      # Создаем архив, исключая папку .github/workflows
      - name: Create Boot-Anima.zip
        run: |
          zip -r Boot-Anima.zip . -x "*.github/workflows/*"

      # Получаем токен для доступа к API GitHub
      - name: Get GitHub token
        id: token
        run: echo "::set-output name=token::${{ secrets.GITHUB_TOKEN }}"

      # Получаем список релизов и обновляем существующий с тегом 'latest'
      - name: Update existing release with 'latest' tag
        run: |
          RELEASE_ID=$(curl -s \
            -H "Authorization: token ${{ steps.token.outputs.token }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/latest \
            | jq -r .id)
          if [ "$RELEASE_ID" != "null" ]; then
            curl -X DELETE \
              -H "Authorization: token ${{ steps.token.outputs.token }}" \
              https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID
          fi
          # Создаем новый релиз с тегом 'latest' и прикрепляем архив
          curl -X POST \
            -H "Authorization: token ${{ steps.token.outputs.token }}" \
            -H "Content-Type: application/json" \
            -d '{
              "tag_name": "latest",
              "name": "Latest Release",
              "body": "Released by workflow script.",
              "draft": false,
              "prerelease": false
            }' https://api.github.com/repos/${{ github.repository }}/releases
          
          # Загружаем архив в релиз
          curl -X POST \
            -H "Authorization: token ${{ steps.token.outputs.token }}" \
            -H "Content-Type: application/zip" \
            --data-binary @Boot-Anima.zip \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/$(curl -s \
              -H 'Authorization: token ${{ steps.token.outputs.token }}' \
              https://api.github.com/repos/${{ github.repository }}/releases/tags/latest \
              | jq -r .id)/assets?name=Boot-Anima.zip"
